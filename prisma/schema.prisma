generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  idUser    String     @id @default(uuid())
  name      String
  lastName  String
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  status    USERSTATUS @default(ACTIVE)
  servers   Servers[]
}

model Servers {
  idServer    String       @id @default(uuid())
  url         String?
  ip          String?
  description String?
  title       String
  status      SERVERSTATUS @default(ACTIVE)
  workerType  WORKERTYPE
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  Users       Users?       @relation(fields: [idUser], references: [idUser])
  idUser      String?
  Tasks       Tasks[]
  Ping        Pings[]
}

model Tasks {
  idTask          String    @id @default(uuid())
  idJob           String
  log             String
  type            TASKTYPES @default(UNDEFINED)
  cron            String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  Servers         Servers?  @relation(fields: [serversIdServer], references: [idServer], onDelete: Cascade)
  serversIdServer String?
}

model Pings {
  idPing          String   @id @default(uuid())
  times           Float
  packetLoss      Float
  min             Float
  max             Float
  avg             Float
  log             String
  isAlive         Boolean
  numericHost     String
  createdAt       DateTime @default(now())
  Servers         Servers? @relation(fields: [serversIdServer], references: [idServer])
  serversIdServer String?
}

enum SERVERSTATUS {
  ACTIVE
  INACTIVE
}

enum USERSTATUS {
  ACTIVE
  INACTIVE
}

enum TASKSSTATUS {
  RUNNING
  STOPPED
  DELETED
  WAITING
}

enum WORKERTYPE {
  SERVER
  URL
}

enum TASKTYPES {
  UNDEFINED
  SERVER
  BACKGROUND
  SUMMARY
  ADMIN
  DAILY
}
